=======================================================================
Introduction to HTML
=======================================================================
What is HTML?
1. HTML = Hyper Text Markup Language (it is not a programming Language)
2. Building blocks for the content of all webpage

-----------------------------------------------------------------------

Creating an HTML File:
1. Does not need a server and will run in your browser (Chrome, Firefox, Safari, Edge etc.)
2. File name must have .html at the end
3. Index.html = root/homepage (root/homepage by default unless you change the server settings).

-----------------------------------------------------------------------

HTML Tag Syntax:
<tagname>Content</tagname>

1. The basic building block of any webpage
2. They format the way text/information is displayed on a webpage
3. Tags = Elements
4. Elements names are surrounded by angle brackets (< >) and normally come in pairs i.e. start and end tags:
    < >  = Start Tag
    < /> = End Tag

Examples:
<h1>About Us</h1>
<p>This is a paragraph</p>

5. The end tag always has a foward slash at the end to close the Tags
6. Some tags close themselves (Remnant of XML/XHTML)

Example:
<br />  = self-closing linebreak tag
<img /> = self-closing image tag

7. Self-closing Tags does not need a "Content" which is why the tag can self-close 

6. In HTML5 we can write self-closing tags without the forward slash for example <br> is perfectly fine in HTML5.

Note: If we write a string of text without any Tags the browser will continue to show/print the text in the browser 

Example:
Hello World

-----------------------------------------------------------------------

Elements - Inline Level vs Block Level:

Inline Elements
    - Do not start on a new linebreak
    - Take only the necessary width of the line
    Examples: <span>, <img>, <a>
Block Elements
    - Start on a new line
    - Take the full width available of the line
    Examples: <div>, <h1> to <h6>, <p>, <form>

-----------------------------------------------------------------------

Tag Attributes:

<tagname attributename="attribute value">Content</tagname>

1. All tags can have attributes which provide addtional information about an element
2. The attributes must be placed within the starting tag.
3. Always formated as Key/Value pairs (example: id="someId")
4. The value must always be in (double[""] or single['']) quotes.

-----------------------------------------------------------------------

HTML Page Stucture Example:

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>Page Title</title>
    </head>
    <body>
        
    </body>
</html>>

Head Tags = holds the metadata (keywords), CSS scripts links etc. for the website
Body Tags = holds the actual markup to display in the browser for the website
Footer Tags = holds information at the footer of the website
HTML Tags = all the above tags must be within the HTML tags 
<!DOCTYPE > = declaration to tell the browser what type of HTML written in (HTML = HTML5)

-----------------------------------------------------------------------

HTML Semantic Tags

A semantic element clearly describes its meaning to both the browser and the developer. This was introducted in HTML5 to structure your documents further.
semantic.html file will provide the example of using semantic tags within your html documents.

Example of HTML5 Semantic Tags:
<header></header>
<nav></nav>
<main></main>
<section></section>
<article></article>
<aside></aside>
<details></Details>
<footer></footer>

-----------------------------------------------------------------------
The HTML/index.html is a HTML Cheatsheet. This will be used as a reference guide on the various HTML Tags we can use when writing our HTML files.

This will help provide a visual guide on:
1. HTML5 syntax (syntax = HTML5 Tags)
2. How the code translates (looks like) within the browser

-----------------------------------------------------------------------
Additional Notes:
I used Visual Studio Code as my text editor (however you can use any other text editor such as Atom, Sublime Text, Notepad++, etc.). If you use another text editor, make sure to have Emmet installed as this allows for coding shortcuts.

I also used Google Chrome for my browser for developing websites/web applications as it has many useful developer tools.

Tips & Tricks:
Emmet Shortcuts to...
1. Generate default HTML structure:
    Type ! + Tab into your code editor

2. Generate Lorem Ipsum dummy text:
    Type Lorem
    [Lorem10 = dummy text of 10 words - change the number for more/less words to generate]

Google Chrome shortcuts to...
1. View the sourcecode running in the browser:
    Windows = Ctrl + u
    Mac OSX = Cmd + Opt + u
[This is used to see what HTML code is being parsed to the browser. which is useful when using dynamic programming languages to generate the HTML using variables etc.]

2. Chrome Developer Tools:
    Windows = F12
    Mac OSX = Cmd + Opt + J
[We can see the HTML Elements within the Developer Tools > Elements Tab]

-----------------------------------------------------------------------
Additional Useful Links/References:
https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5
https://www.w3schools.com/html/default.asp
https://www.sololearn.com/Course/HTML/
https://www.youtube.com/watch?v=UB1O30fR-EE&list=PLillGF-RfqbZTASqIqdvm1R5mLrQq79CU (Traversey Media)


-----------------------------------------------------------------------
Date Created: 21st December 2017
-----------------------------------------------------------------------